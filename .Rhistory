render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "basics.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "transition_to_R.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "packages_suggested.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "r_projects.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "importing.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "cleaning.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "cleaning.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "dates.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
# Translate chapter page
chapter_list = c("editorial_style.qmd", "data_used.qmd", "basics.qmd", "transition_to_R.qmd", "packages_suggested.qmd", "r_projects.qmd", "importing.qmd", #"cleaning.qmd",
"dates.qmd", "characters_strings.qmd", "factors.qmd", "pivoting.qmd", "grouping.qmd", "joining_matching.qmd", "deduplication.qmd", "iteration.qmd", "tables_descriptive.qmd", "stat_tests.qmd", "regression.qmd", "missing_data.qmd", "standardization.qmd", "moving_average.qmd", "time_series.qmd", "epidemic_models.qmd", "contact_tracing.qmd", "survey_analysis.qmd", "survival_analysis.qmd", "gis.qmd", "tables_presentation.qmd", "ggplot_basics.qmd", "ggplot_tips.qmd", "epicurves.qmd", "age_pyramid.qmd", "heatmaps.qmd", "diagrams.qmd", "combination_analysis.qmd", "transmission_chains.qmd", "phylogenetic_trees.qmd", "interactive_plots.qmd", "rmarkdown.qmd", "reportfactory.qmd", "flexdashboard.qmd", "shiny_basics.qmd", "writing_functions.qmd", "directories.qmd", "collaboration.qmd", "errors.qmd", "help.qmd", "network_drives.qmd", "data_table.qmd")
# Write a loop to run the translation for each chapter based on chapter_list
for (i in 1:length(chapter_list)) {
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = chapter_list[i],
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
}
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "characters_strings.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "factors.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "pivoting.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "grouping.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "joining_matching.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "deduplication.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "iteration.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
# Translate chapter page
chapter_list = c("editorial_style.qmd", "data_used.qmd", "basics.qmd", "transition_to_R.qmd", "packages_suggested.qmd", "r_projects.qmd", "importing.qmd",
#"cleaning.qmd",
"dates.qmd",
#"characters_strings.qmd",
"factors.qmd", "pivoting.qmd", "grouping.qmd", "joining_matching.qmd", "deduplication.qmd", "iteration.qmd", "tables_descriptive.qmd", "stat_tests.qmd", "regression.qmd", "missing_data.qmd", "standardization.qmd", "moving_average.qmd", "time_series.qmd", "epidemic_models.qmd", "contact_tracing.qmd", "survey_analysis.qmd", "survival_analysis.qmd", "gis.qmd", "tables_presentation.qmd", "ggplot_basics.qmd", "ggplot_tips.qmd", "epicurves.qmd", "age_pyramid.qmd", "heatmaps.qmd", "diagrams.qmd", "combination_analysis.qmd", "transmission_chains.qmd", "phylogenetic_trees.qmd", "interactive_plots.qmd", "rmarkdown.qmd", "reportfactory.qmd", "flexdashboard.qmd", "shiny_basics.qmd", "writing_functions.qmd", "directories.qmd", "collaboration.qmd", "errors.qmd", "help.qmd", "network_drives.qmd", "data_table.qmd")
# Write a loop to run the translation for each chapter based on chapter_list
for (i in 1:length(chapter_list)) {
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = chapter_list[i],
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
}
# Translate chapter page
chapter_list = c("editorial_style.qmd", "data_used.qmd", "basics.qmd", "transition_to_R.qmd", "packages_suggested.qmd", "r_projects.qmd", "importing.qmd",
#"cleaning.qmd",
"dates.qmd",
#"characters_strings.qmd",
"factors.qmd", "pivoting.qmd", "grouping.qmd", "joining_matching.qmd", "deduplication.qmd", "iteration.qmd", "tables_descriptive.qmd", "stat_tests.qmd", "regression.qmd",
#"missing_data.qmd",
"standardization.qmd", "moving_average.qmd", "time_series.qmd", "epidemic_models.qmd", "contact_tracing.qmd", "survey_analysis.qmd", "survival_analysis.qmd", "gis.qmd", "tables_presentation.qmd", "ggplot_basics.qmd", "ggplot_tips.qmd", "epicurves.qmd", "age_pyramid.qmd", "heatmaps.qmd", "diagrams.qmd", "combination_analysis.qmd", "transmission_chains.qmd", "phylogenetic_trees.qmd", "interactive_plots.qmd", "rmarkdown.qmd", "reportfactory.qmd", "flexdashboard.qmd", "shiny_basics.qmd", "writing_functions.qmd", "directories.qmd", "collaboration.qmd", "errors.qmd", "help.qmd", "network_drives.qmd", "data_table.qmd")
# Write a loop to run the translation for each chapter based on chapter_list
for (i in 1:length(chapter_list)) {
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = chapter_list[i],
force = FALSE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
}
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = chapter_list[i],
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
# Write a loop to run the translation for each chapter based on chapter_list
for (i in 1:length(chapter_list)) {
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = chapter_list[i],
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
}
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "cleaning.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "characters_strings.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "missing_data.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "cleaning.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
babeldown::deepl_translate_quarto(
book_path = here::here("new_pages"),
chapter = "cleaning.qmd",
force = TRUE,
render = FALSE, # Whether to run babelquarto::render_bool() after translation.
source_lang = "EN",
target_lang = "DE",
formality = "less")
gert::git_init(dir)
withr::local_tempdir()
?gert::git_init
gert::git_log()
gert::git_log()
babeldown::deepl_update(
book_path = here::here("new_pages"),
out_path = here::here("new_pages"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL
)
babeldown::deepl_update(
path = here::here("new_pages"),
out_path = here::here("new_pages"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
# 5. Re-render chapter that has changes
chapter_changes = c("basics.qmd", "factors.qmd")
chapter_changes[1]
for (i in 1:length(chapter_changes)) {
babeldown::deepl_update(
path = here::here("new_pages", chapter_changes[i]),
out_path = here::here("new_pages"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
}
chapter_changes_update = c("basics.de.qmd", "factors.de.qmd")
for (i in 1:length(chapter_changes)) {
babeldown::deepl_update(
path = here::here("new_pages", chapter_changes[i]),
out_path = here::here("new_pages", chapter_changes_update[i]),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
}
babeldown::deepl_update(
path = here::here("new_pages", "basics.qmd"),
out_path = here::here("new_pages", "basics.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
gert::git_log()
# Setup the environment variable
Sys.setenv("DEEPL_API_URL" = "https://api.deepl.com")
Sys.setenv(DEEPL_API_KEY = "287d5481-9d96-8500-228c-6f98cfb3c576")
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
# out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
xml2::xml_text("It is rather common that you want to reverse the level order. Simply wrap the factor with `fct_rev()`.
Note that if you want to reverse *only* a plot legend but not the actual factor levels, you can do that with `guides()` (see [ggplot tips]).  ")
?xml2::xml_text
x <- read_xml("<p>This is some text. This is <b>bold!</b></p>")
library(xml2)
x <- read_xml("<p>This is some text. This is <b>bold!</b></p>")
xml_text(x)
xml_text(xml_children(x))
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "VN",
formality = "less",
yaml_fields = NULL)
babeldown::deepl_languages(type = 'target')
print(n = 40)
print(babeldown::deepl_languages(type = 'target'), n = 40)
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
gert::git_diff(log[["commit"]][[latest_source_commit_index]])
gert::git_diff(log[["commit"]])
gert::git_diff()
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
babeldown::deepl_update(
path = here::here("new_pages", "factors.qmd"),
out_path = here::here("new_pages", "factors.de.qmd"),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
gert::git_diff()
here::here("new_pages", "factors.qmd")
here::here("new_pages", "factors.de.qmd")
log <- gert::git_log()
gert::git_diff(log[["commit"]][[latest_source_commit_index]])
log["1"]
log[1]
?gert::git_commit()
for (i in 1:length(chapter_changes)) {
babeldown::deepl_update(
path = here::here("new_pages", chapter_changes[i]),
out_path = here::here("new_pages", chapter_changes_update[i]),
source_lang = "EN",
target_lang = "DE",
formality = "less",
yaml_fields = NULL)
}
rlang::check_installed("rprojroot")
rlang::check_installed("gert")
formality <- rlang::arg_match(formality, values = c("default",
"more", "less", "prefer_more", "prefer_less"))
formality <- "less"
examine_source_lang(source_lang)
source_lang_code <- examine_source_lang("EN")
?examine_source_lang
??examine_source_lang
source_lang_code <- "EN"
target_lang_code <- "DE"
repo <- rprojroot::find_root(rprojroot::is_git_root, here::here("new_pages", "factors"))
rprojroot::find_root()
here::here("new_pages", "factors")
repo <- rprojroot::find_root(rprojroot::is_git_root, "D:/Book Writing/epihandbook_quarto/new_pages/factors.qmd")
log <- gert::git_log(repo = repo)
found_source <- FALSE
latest_source_commit_index <- 0
while (!found_source) {
latest_source_commit_index <- latest_source_commit_index +
1
diff_info <- gert::git_diff(log[["commit"]][[latest_source_commit_index]],
repo = repo)
found_source <- (fs::path_file(path) %in% diff_info[["new"]])
}
while (!found_source) {
latest_source_commit_index <- latest_source_commit_index + 1
diff_info <- gert::git_diff(log[["commit"]][[latest_source_commit_index]],
repo = repo)
found_source <- (fs::path_file("D:/Book Writing/epihandbook_quarto/new_pages/factors.qmd")) %in% diff_info[["new"]])
fs::path_file("D:/Book Writing/epihandbook_quarto/new_pages/factors.qmd")
gert::git_diff(log[["commit"]][[1]],
repo = repo)
gert::git_diff(log[["commit"]][[4]],
repo = repo)
